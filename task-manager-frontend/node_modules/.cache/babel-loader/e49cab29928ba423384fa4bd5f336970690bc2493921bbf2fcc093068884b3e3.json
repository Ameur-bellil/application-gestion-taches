{"ast":null,"code":"var _jsxFileName = \"/home/amer/Desktop/application-gestion-taches/task-manager-frontend/src/components/TaskManager.tsx\",\n  _s = $RefreshSig$();\nimport { TaskForm } from './TaskForm';\nimport { TaskList } from './TaskList';\nimport { fetchTasks, createTask, deleteTask, updateStatus } from '../services/taskService';\nimport { useToast } from '../hooks/use-toast';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const {\n    toast\n  } = useToast();\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        const data = await fetchTasks();\n        setTasks(data);\n      } catch (error) {\n        toast({\n          title: \"Erreur\",\n          description: \"Impossible de charger les tâches.\",\n          variant: \"destructive\"\n        });\n      }\n    };\n    loadTasks();\n  }, [toast]);\n  const handleCreateTask = async taskData => {\n    try {\n      const newTask = await createTask({\n        title: taskData.title,\n        description: taskData.description || ''\n      });\n      setTasks([newTask, ...tasks]);\n      toast({\n        title: \"Tâche créée\",\n        description: `\"${newTask.title}\" a été ajoutée avec succès.`\n      });\n    } catch (error) {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de créer la tâche.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(tasks.filter(task => task.id !== id));\n      toast({\n        title: \"Tâche supprimée\",\n        description: \"La tâche a été supprimée avec succès.\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de supprimer la tâche.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n  const handleToggleStatus = async task => {\n    try {\n      const newStatus = task.status === 'pending' ? 'done' : 'pending';\n      await updateStatus(task.id, newStatus);\n      const updatedTasks = tasks.map(t => t.id === task.id ? {\n        ...t,\n        status: newStatus\n      } : t);\n      setTasks(updatedTasks);\n      const statusText = newStatus === 'done' ? 'terminée' : 'en cours';\n      toast({\n        title: \"Statut mis à jour\",\n        description: `\"${task.title}\" est maintenant ${statusText}.`\n      });\n    } catch (error) {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de changer le statut.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8 animate-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onSubmit: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onToggleStatus: handleToggleStatus,\n      onDelete: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n};\n_s(TaskManager, \"TMpnNfqlreBa6AQguLXtw5rQfiU=\", false, function () {\n  return [useToast];\n});\n_c = TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["TaskForm","TaskList","fetchTasks","createTask","deleteTask","updateStatus","useToast","useEffect","useState","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","toast","loadTasks","data","error","title","description","variant","handleCreateTask","taskData","newTask","handleDeleteTask","id","filter","task","handleToggleStatus","newStatus","status","updatedTasks","map","t","statusText","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onToggleStatus","onDelete","_c","$RefreshReg$"],"sources":["/home/amer/Desktop/application-gestion-taches/task-manager-frontend/src/components/TaskManager.tsx"],"sourcesContent":["import { TaskForm } from './TaskForm';\nimport { TaskList } from './TaskList';\nimport { fetchTasks, createTask, deleteTask, updateStatus } from '../services/taskService';\nimport { CreateTaskInput, Task } from '../types/task';\nimport { useToast } from '../hooks/use-toast';\nimport { useEffect, useState } from 'react';\n\nexport const TaskManager = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        const data = await fetchTasks();\n        setTasks(data);\n      } catch (error) {\n        toast({\n          title: \"Erreur\",\n          description: \"Impossible de charger les tâches.\",\n          variant: \"destructive\",\n        });\n      }\n    };\n\n    loadTasks();\n  }, [toast]);\n\n  const handleCreateTask = async (taskData: CreateTaskInput) => {\n    try {\n      const newTask = await createTask({\n        title: taskData.title,\n        description: taskData.description || ''\n      });\n      setTasks([newTask, ...tasks]);\n      toast({\n        title: \"Tâche créée\",\n        description: `\"${newTask.title}\" a été ajoutée avec succès.`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de créer la tâche.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleDeleteTask = async (id: number) => {\n    try {\n      await deleteTask(id);\n      setTasks(tasks.filter(task => task.id !== id));\n      toast({\n        title: \"Tâche supprimée\",\n        description: \"La tâche a été supprimée avec succès.\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de supprimer la tâche.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleToggleStatus = async (task: Task) => {\n    try {\n      const newStatus = task.status === 'pending' ? 'done' : 'pending' as const;\n      await updateStatus(task.id, newStatus);\n      const updatedTasks = tasks.map(t =>\n          t.id === task.id ? { ...t, status: newStatus } : t\n      ) as Task[];\n      setTasks(updatedTasks);\n      const statusText = newStatus === 'done' ? 'terminée' : 'en cours';\n      toast({\n        title: \"Statut mis à jour\",\n        description: `\"${task.title}\" est maintenant ${statusText}.`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de changer le statut.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n      <div className=\"space-y-8 animate-fade-in\">\n        <TaskForm onSubmit={handleCreateTask} />\n        <TaskList\n            tasks={tasks}\n            onToggleStatus={handleToggleStatus}\n            onDelete={handleDeleteTask}\n        />\n      </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}