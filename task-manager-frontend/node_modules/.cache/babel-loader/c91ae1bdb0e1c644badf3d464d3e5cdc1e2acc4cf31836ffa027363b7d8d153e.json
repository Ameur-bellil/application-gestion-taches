{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3030/tasks';\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.response.use(response => response, error => {\n  if (axios.isAxiosError(error) && !error.response) {\n    window.dispatchEvent(new CustomEvent('server-down'));\n  }\n  return Promise.reject(error);\n});\nexport const fetchTasks = async () => {\n  const res = await api.get('/');\n  return res.data;\n};\nexport const createTask = async data => {\n  const res = await api.post('/', data);\n  return res.data;\n};\nexport const deleteTask = async id => {\n  return await api.delete(`/${id}`);\n};\nexport const updateStatus = async (id, status) => {\n  return await api.patch(`/${id}`, {\n    status\n  });\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","response","use","error","isAxiosError","window","dispatchEvent","CustomEvent","Promise","reject","fetchTasks","res","get","data","createTask","post","deleteTask","id","delete","updateStatus","status","patch"],"sources":["/home/amer/Desktop/application-gestion-taches/task-manager-frontend/src/services/taskService.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3030/tasks';\n\nconst api = axios.create({\n    baseURL: API_URL,\n});\n\napi.interceptors.response.use(\n    response => response,\n    error => {\n        if (axios.isAxiosError(error) && !error.response) {\n            window.dispatchEvent(new CustomEvent('server-down'));\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport const fetchTasks = async () => {\n    const res = await api.get('/');\n    return res.data;\n};\n\nexport const createTask = async (data: { title: string; description: string }) => {\n    const res = await api.post('/', data);\n    return res.data;\n};\n\nexport const deleteTask = async (id: number) => {\n    return await api.delete(`/${id}`);\n};\n\nexport const updateStatus = async (id: number, status: 'pending' | 'done') => {\n    return await api.patch(`/${id}`, { status });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B;AAE7C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH;AACb,CAAC,CAAC;AAEFC,GAAG,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CACzBD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACL,IAAIR,KAAK,CAACS,YAAY,CAACD,KAAK,CAAC,IAAI,CAACA,KAAK,CAACF,QAAQ,EAAE;IAC9CI,MAAM,CAACC,aAAa,CAAC,IAAIC,WAAW,CAAC,aAAa,CAAC,CAAC;EACxD;EACA,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,GAAG,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,GAAG,CAAC;EAC9B,OAAOD,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOD,IAA4C,IAAK;EAC9E,MAAMF,GAAG,GAAG,MAAMd,GAAG,CAACkB,IAAI,CAAC,GAAG,EAAEF,IAAI,CAAC;EACrC,OAAOF,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAOC,EAAU,IAAK;EAC5C,OAAO,MAAMpB,GAAG,CAACqB,MAAM,CAAC,IAAID,EAAE,EAAE,CAAC;AACrC,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOF,EAAU,EAAEG,MAA0B,KAAK;EAC1E,OAAO,MAAMvB,GAAG,CAACwB,KAAK,CAAC,IAAIJ,EAAE,EAAE,EAAE;IAAEG;EAAO,CAAC,CAAC;AAChD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}